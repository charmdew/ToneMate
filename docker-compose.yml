version: '3.3'
services:
  spring:
    build: ./back-end
    container_name: spring
    environment:
      - DB_URL=${DB_URL}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - BUCKET_NAME=${BUCKET_NAME}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - KAKAO_SECRET=${KAKAO_SECRET}
      - KAKAO_ID=${KAKAO_ID}
      - GOOGLE_SECRET=${GOOGLE_SECRET}
      - GOOGLE_ID=${GOOGLE_ID}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}

      # - FLASK_DOMAIN=${FLASK_DOMAIN}
      - FLASK_DOMAIN=flask:5000
    volumes:
      - AI_DATA:/DATA
    # ports:
    #   - ${SPRING_PORT}:5000
    command: java -jar /tonemate/build/libs/tonemate-0.0.1-SNAPSHOT.jar
    networks:
      - tonemate

  flask:
    container_name: flask
    build: ./AI
    environment:
      - FLASK_FEATURES=${FLASK_FEATURES}
      - FLASK_TARGET_EPOCH=${FLASK_TARGET_EPOCH}
    # ports:
    #   - ${FLASK_PORT}:5000
    volumes:
      - AI_DATA:/DATA
    command: python app.py
    networks:
      - tonemate
    
  front:
    build:
      context: ./front-end/tonemate
      dockerfile: docker/production/Dockerfile
    ports:
      - '3003:3000'
    environment:
      - SPRING_DOMAIN=spring:5000
    networks:
      - tonemate
volumes:
  AI_DATA:
    external: true
networks:
  tonemate:
    driver: bridge
